/*
 * This file is generated by jOOQ.
 */
package com.example.onboardingservice.jooq.tables.records;


import com.example.onboardingservice.jooq.tables.ScenarioNotification;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ScenarioNotificationRecord extends UpdatableRecordImpl<ScenarioNotificationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.scenario_notification.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.scenario_notification.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.scenario_notification.chat_id</code>.
     */
    public void setChatId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.scenario_notification.chat_id</code>.
     */
    public Long getChatId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.scenario_notification.message</code>.
     */
    public void setMessage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.scenario_notification.message</code>.
     */
    public String getMessage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.scenario_notification.repeat</code>.
     */
    public void setRepeat(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.scenario_notification.repeat</code>.
     */
    public Boolean getRepeat() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.scenario_notification.delay</code>.
     */
    public void setDelay(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.scenario_notification.delay</code>.
     */
    public String getDelay() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.scenario_notification.status</code>.
     */
    public void setStatus(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.scenario_notification.status</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.scenario_notification.next_execution</code>.
     */
    public void setNextExecution(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.scenario_notification.next_execution</code>.
     */
    public OffsetDateTime getNextExecution() {
        return (OffsetDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScenarioNotificationRecord
     */
    public ScenarioNotificationRecord() {
        super(ScenarioNotification.SCENARIO_NOTIFICATION);
    }

    /**
     * Create a detached, initialised ScenarioNotificationRecord
     */
    public ScenarioNotificationRecord(UUID id, Long chatId, String message, Boolean repeat, String delay, String status, OffsetDateTime nextExecution) {
        super(ScenarioNotification.SCENARIO_NOTIFICATION);

        setId(id);
        setChatId(chatId);
        setMessage(message);
        setRepeat(repeat);
        setDelay(delay);
        setStatus(status);
        setNextExecution(nextExecution);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ScenarioNotificationRecord
     */
    public ScenarioNotificationRecord(com.example.onboardingservice.jooq.tables.pojos.ScenarioNotification value) {
        super(ScenarioNotification.SCENARIO_NOTIFICATION);

        if (value != null) {
            setId(value.getId());
            setChatId(value.getChatId());
            setMessage(value.getMessage());
            setRepeat(value.getRepeat());
            setDelay(value.getDelay());
            setStatus(value.getStatus());
            setNextExecution(value.getNextExecution());
            resetChangedOnNotNull();
        }
    }
}
