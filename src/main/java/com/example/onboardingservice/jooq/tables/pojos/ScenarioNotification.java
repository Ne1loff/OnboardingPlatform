/*
 * This file is generated by jOOQ.
 */
package com.example.onboardingservice.jooq.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ScenarioNotification implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private Long chatId;
    private String message;
    private Boolean repeat;
    private String delay;
    private String status;
    private OffsetDateTime nextExecution;

    public ScenarioNotification() {}

    public ScenarioNotification(ScenarioNotification value) {
        this.id = value.id;
        this.chatId = value.chatId;
        this.message = value.message;
        this.repeat = value.repeat;
        this.delay = value.delay;
        this.status = value.status;
        this.nextExecution = value.nextExecution;
    }

    public ScenarioNotification(
        UUID id,
        Long chatId,
        String message,
        Boolean repeat,
        String delay,
        String status,
        OffsetDateTime nextExecution
    ) {
        this.id = id;
        this.chatId = chatId;
        this.message = message;
        this.repeat = repeat;
        this.delay = delay;
        this.status = status;
        this.nextExecution = nextExecution;
    }

    /**
     * Getter for <code>public.scenario_notification.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.scenario_notification.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.scenario_notification.chat_id</code>.
     */
    public Long getChatId() {
        return this.chatId;
    }

    /**
     * Setter for <code>public.scenario_notification.chat_id</code>.
     */
    public void setChatId(Long chatId) {
        this.chatId = chatId;
    }

    /**
     * Getter for <code>public.scenario_notification.message</code>.
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * Setter for <code>public.scenario_notification.message</code>.
     */
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for <code>public.scenario_notification.repeat</code>.
     */
    public Boolean getRepeat() {
        return this.repeat;
    }

    /**
     * Setter for <code>public.scenario_notification.repeat</code>.
     */
    public void setRepeat(Boolean repeat) {
        this.repeat = repeat;
    }

    /**
     * Getter for <code>public.scenario_notification.delay</code>.
     */
    public String getDelay() {
        return this.delay;
    }

    /**
     * Setter for <code>public.scenario_notification.delay</code>.
     */
    public void setDelay(String delay) {
        this.delay = delay;
    }

    /**
     * Getter for <code>public.scenario_notification.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>public.scenario_notification.status</code>.
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for <code>public.scenario_notification.next_execution</code>.
     */
    public OffsetDateTime getNextExecution() {
        return this.nextExecution;
    }

    /**
     * Setter for <code>public.scenario_notification.next_execution</code>.
     */
    public void setNextExecution(OffsetDateTime nextExecution) {
        this.nextExecution = nextExecution;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ScenarioNotification other = (ScenarioNotification) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.chatId == null) {
            if (other.chatId != null)
                return false;
        }
        else if (!this.chatId.equals(other.chatId))
            return false;
        if (this.message == null) {
            if (other.message != null)
                return false;
        }
        else if (!this.message.equals(other.message))
            return false;
        if (this.repeat == null) {
            if (other.repeat != null)
                return false;
        }
        else if (!this.repeat.equals(other.repeat))
            return false;
        if (this.delay == null) {
            if (other.delay != null)
                return false;
        }
        else if (!this.delay.equals(other.delay))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.nextExecution == null) {
            if (other.nextExecution != null)
                return false;
        }
        else if (!this.nextExecution.equals(other.nextExecution))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.chatId == null) ? 0 : this.chatId.hashCode());
        result = prime * result + ((this.message == null) ? 0 : this.message.hashCode());
        result = prime * result + ((this.repeat == null) ? 0 : this.repeat.hashCode());
        result = prime * result + ((this.delay == null) ? 0 : this.delay.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.nextExecution == null) ? 0 : this.nextExecution.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ScenarioNotification (");

        sb.append(id);
        sb.append(", ").append(chatId);
        sb.append(", ").append(message);
        sb.append(", ").append(repeat);
        sb.append(", ").append(delay);
        sb.append(", ").append(status);
        sb.append(", ").append(nextExecution);

        sb.append(")");
        return sb.toString();
    }
}
