/*
 * This file is generated by jOOQ.
 */
package com.example.onboardingservice.jooq.tables.records;


import com.example.onboardingservice.jooq.tables.OnboardingDocuments;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OnboardingDocumentsRecord extends UpdatableRecordImpl<OnboardingDocumentsRecord> implements Record2<UUID, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.onboarding_documents.key</code>.
     */
    public void setKey(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.onboarding_documents.key</code>.
     */
    public UUID getKey() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.onboarding_documents.filename</code>.
     */
    public void setFilename(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.onboarding_documents.filename</code>.
     */
    public String getFilename() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return OnboardingDocuments.ONBOARDING_DOCUMENTS.KEY;
    }

    @Override
    public Field<String> field2() {
        return OnboardingDocuments.ONBOARDING_DOCUMENTS.FILENAME;
    }

    @Override
    public UUID component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getFilename();
    }

    @Override
    public UUID value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getFilename();
    }

    @Override
    public OnboardingDocumentsRecord value1(UUID value) {
        setKey(value);
        return this;
    }

    @Override
    public OnboardingDocumentsRecord value2(String value) {
        setFilename(value);
        return this;
    }

    @Override
    public OnboardingDocumentsRecord values(UUID value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OnboardingDocumentsRecord
     */
    public OnboardingDocumentsRecord() {
        super(OnboardingDocuments.ONBOARDING_DOCUMENTS);
    }

    /**
     * Create a detached, initialised OnboardingDocumentsRecord
     */
    public OnboardingDocumentsRecord(UUID key, String filename) {
        super(OnboardingDocuments.ONBOARDING_DOCUMENTS);

        setKey(key);
        setFilename(filename);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OnboardingDocumentsRecord
     */
    public OnboardingDocumentsRecord(com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments value) {
        super(OnboardingDocuments.ONBOARDING_DOCUMENTS);

        if (value != null) {
            setKey(value.getKey());
            setFilename(value.getFilename());
            resetChangedOnNotNull();
        }
    }
}
