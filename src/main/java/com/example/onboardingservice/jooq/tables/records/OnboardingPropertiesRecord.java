/*
 * This file is generated by jOOQ.
 */
package com.example.onboardingservice.jooq.tables.records;


import com.example.onboardingservice.jooq.tables.OnboardingProperties;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OnboardingPropertiesRecord extends UpdatableRecordImpl<OnboardingPropertiesRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.onboarding_properties.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.onboarding_properties.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.onboarding_properties.description</code>.
     */
    public void setDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.onboarding_properties.description</code>.
     */
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.onboarding_properties.value</code>.
     */
    public void setValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.onboarding_properties.value</code>.
     */
    public String getValue() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return OnboardingProperties.ONBOARDING_PROPERTIES.NAME;
    }

    @Override
    public Field<String> field2() {
        return OnboardingProperties.ONBOARDING_PROPERTIES.DESCRIPTION;
    }

    @Override
    public Field<String> field3() {
        return OnboardingProperties.ONBOARDING_PROPERTIES.VALUE;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String component2() {
        return getDescription();
    }

    @Override
    public String component3() {
        return getValue();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String value2() {
        return getDescription();
    }

    @Override
    public String value3() {
        return getValue();
    }

    @Override
    public OnboardingPropertiesRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public OnboardingPropertiesRecord value2(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public OnboardingPropertiesRecord value3(String value) {
        setValue(value);
        return this;
    }

    @Override
    public OnboardingPropertiesRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OnboardingPropertiesRecord
     */
    public OnboardingPropertiesRecord() {
        super(OnboardingProperties.ONBOARDING_PROPERTIES);
    }

    /**
     * Create a detached, initialised OnboardingPropertiesRecord
     */
    public OnboardingPropertiesRecord(String name, String description, String value) {
        super(OnboardingProperties.ONBOARDING_PROPERTIES);

        setName(name);
        setDescription(description);
        setValue(value);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OnboardingPropertiesRecord
     */
    public OnboardingPropertiesRecord(com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties value) {
        super(OnboardingProperties.ONBOARDING_PROPERTIES);

        if (value != null) {
            setName(value.getName());
            setDescription(value.getDescription());
            setValue(value.getValue());
            resetChangedOnNotNull();
        }
    }
}
