/*
 * This file is generated by jOOQ.
 */
package com.example.onboardingservice.jooq.tables.daos;


import com.example.onboardingservice.jooq.AbstractSpringDAOImpl;
import com.example.onboardingservice.jooq.tables.OnboardingProperties;
import com.example.onboardingservice.jooq.tables.records.OnboardingPropertiesRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class OnboardingPropertiesDao extends AbstractSpringDAOImpl<OnboardingPropertiesRecord, com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties, String> {

    /**
     * Create a new OnboardingPropertiesDao without any configuration
     */
    public OnboardingPropertiesDao() {
        super(OnboardingProperties.ONBOARDING_PROPERTIES, com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties.class);
    }

    /**
     * Create a new OnboardingPropertiesDao with an attached configuration
     */
    @Autowired
    public OnboardingPropertiesDao(Configuration configuration) {
        super(OnboardingProperties.ONBOARDING_PROPERTIES, com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties.class, configuration);
    }

    @Override
    public String getId(com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties object) {
        return object.getName();
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(OnboardingProperties.ONBOARDING_PROPERTIES.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties> fetchByName(String... values) {
        return fetch(OnboardingProperties.ONBOARDING_PROPERTIES.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties fetchOneByName(String value) {
        return fetchOne(OnboardingProperties.ONBOARDING_PROPERTIES.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties> fetchOptionalByName(String value) {
        return fetchOptional(OnboardingProperties.ONBOARDING_PROPERTIES.NAME, value);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(OnboardingProperties.ONBOARDING_PROPERTIES.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties> fetchByDescription(String... values) {
        return fetch(OnboardingProperties.ONBOARDING_PROPERTIES.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>value BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties> fetchRangeOfValue(String lowerInclusive, String upperInclusive) {
        return fetchRange(OnboardingProperties.ONBOARDING_PROPERTIES.VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>value IN (values)</code>
     */
    public List<com.example.onboardingservice.jooq.tables.pojos.OnboardingProperties> fetchByValue(String... values) {
        return fetch(OnboardingProperties.ONBOARDING_PROPERTIES.VALUE, values);
    }
}
