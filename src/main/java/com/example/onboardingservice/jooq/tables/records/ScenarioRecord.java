/*
 * This file is generated by jOOQ.
 */
package com.example.onboardingservice.jooq.tables.records;


import com.example.onboardingservice.jooq.tables.Scenario;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ScenarioRecord extends UpdatableRecordImpl<ScenarioRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.scenario.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.scenario.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.scenario.scenario_name</code>.
     */
    public void setScenarioName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.scenario.scenario_name</code>.
     */
    public String getScenarioName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.scenario.chat_id</code>.
     */
    public void setChatId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.scenario.chat_id</code>.
     */
    public Long getChatId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.scenario.current_action_id</code>.
     */
    public void setCurrentActionId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.scenario.current_action_id</code>.
     */
    public UUID getCurrentActionId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.scenario.is_active</code>.
     */
    public void setIsActive(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.scenario.is_active</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.scenario.first_action_id</code>.
     */
    public void setFirstActionId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.scenario.first_action_id</code>.
     */
    public UUID getFirstActionId() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.scenario.context</code>.
     */
    public void setContext(JSONB value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.scenario.context</code>.
     */
    public JSONB getContext() {
        return (JSONB) get(6);
    }

    /**
     * Setter for <code>public.scenario.route_definition_id</code>.
     */
    public void setRouteDefinitionId(UUID value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.scenario.route_definition_id</code>.
     */
    public UUID getRouteDefinitionId() {
        return (UUID) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScenarioRecord
     */
    public ScenarioRecord() {
        super(Scenario.SCENARIO);
    }

    /**
     * Create a detached, initialised ScenarioRecord
     */
    public ScenarioRecord(UUID id, String scenarioName, Long chatId, UUID currentActionId, Boolean isActive, UUID firstActionId, JSONB context, UUID routeDefinitionId) {
        super(Scenario.SCENARIO);

        setId(id);
        setScenarioName(scenarioName);
        setChatId(chatId);
        setCurrentActionId(currentActionId);
        setIsActive(isActive);
        setFirstActionId(firstActionId);
        setContext(context);
        setRouteDefinitionId(routeDefinitionId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ScenarioRecord
     */
    public ScenarioRecord(com.example.onboardingservice.jooq.tables.pojos.Scenario value) {
        super(Scenario.SCENARIO);

        if (value != null) {
            setId(value.getId());
            setScenarioName(value.getScenarioName());
            setChatId(value.getChatId());
            setCurrentActionId(value.getCurrentActionId());
            setIsActive(value.getIsActive());
            setFirstActionId(value.getFirstActionId());
            setContext(value.getContext());
            setRouteDefinitionId(value.getRouteDefinitionId());
            resetChangedOnNotNull();
        }
    }
}
