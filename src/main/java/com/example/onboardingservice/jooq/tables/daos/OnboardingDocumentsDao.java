/*
 * This file is generated by jOOQ.
 */
package com.example.onboardingservice.jooq.tables.daos;


import com.example.onboardingservice.jooq.AbstractSpringDAOImpl;
import com.example.onboardingservice.jooq.tables.OnboardingDocuments;
import com.example.onboardingservice.jooq.tables.records.OnboardingDocumentsRecord;
import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class OnboardingDocumentsDao extends AbstractSpringDAOImpl<OnboardingDocumentsRecord, com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments, UUID> {

    /**
     * Create a new OnboardingDocumentsDao without any configuration
     */
    public OnboardingDocumentsDao() {
        super(OnboardingDocuments.ONBOARDING_DOCUMENTS, com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments.class);
    }

    /**
     * Create a new OnboardingDocumentsDao with an attached configuration
     */
    @Autowired
    public OnboardingDocumentsDao(Configuration configuration) {
        super(OnboardingDocuments.ONBOARDING_DOCUMENTS, com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments.class, configuration);
    }

    @Override
    public UUID getId(com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments> fetchRangeOfKey(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(OnboardingDocuments.ONBOARDING_DOCUMENTS.KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>key IN (values)</code>
     */
    public List<com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments> fetchByKey(UUID... values) {
        return fetch(OnboardingDocuments.ONBOARDING_DOCUMENTS.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>key = value</code>
     */
    public com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments fetchOneByKey(UUID value) {
        return fetchOne(OnboardingDocuments.ONBOARDING_DOCUMENTS.KEY, value);
    }

    /**
     * Fetch a unique record that has <code>key = value</code>
     */
    public Optional<com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments> fetchOptionalByKey(UUID value) {
        return fetchOptional(OnboardingDocuments.ONBOARDING_DOCUMENTS.KEY, value);
    }

    /**
     * Fetch records that have <code>filename BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments> fetchRangeOfFilename(String lowerInclusive, String upperInclusive) {
        return fetchRange(OnboardingDocuments.ONBOARDING_DOCUMENTS.FILENAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>filename IN (values)</code>
     */
    public List<com.example.onboardingservice.jooq.tables.pojos.OnboardingDocuments> fetchByFilename(String... values) {
        return fetch(OnboardingDocuments.ONBOARDING_DOCUMENTS.FILENAME, values);
    }
}
